<?xml version="1.0" encoding="UTF-8"?>
<!-- License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html). -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.basepom</groupId>
		<artifactId>basepom-oss</artifactId>
		<version>39</version>
	</parent>

	<groupId>io.bf2.kafka</groupId>
	<artifactId>group-authorizer</artifactId>
	<version>1.1-SNAPSHOT</version>

	<name>strimzi-kafka-group-authorizer</name>
	<url>https://strimzi.io</url>
	<description>A Group ACL Authorizer for Strmzi Kafaka</description>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Ramesh Reddy</name>
			<id>rareddy</id>
			<email>rareddy@redhat.com</email>
			<organization>Red Hat</organization>
			<roles>
				<role>Project Lead</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.targetJdk>11</project.build.targetJdk>
		<basepom.check.skip-license>true</basepom.check.skip-license>
		<basepom.check.fail-dependency>false</basepom.check.fail-dependency>
		<basepom.check.skip-dependency-scope>true</basepom.check.skip-dependency-scope>

		<kafka.version>2.7.0</kafka.version>
		<scala.version>2.12.8</scala.version>
		<junit.version>5.7.1</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<slf4j.version>1.7.30</slf4j.version>
		<jackson-core.version>2.10.5</jackson-core.version>
		<jackson-databind.version>2.10.5.1</jackson-databind.version>
		<guava.version>30.0-jre</guava.version>
		<zookeeper.version>3.5.8</zookeeper.version>
		<kafka-junit.version>4.1.11</kafka-junit.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.13</artifactId>
			<version>${kafka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-databind.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.charithe</groupId>
			<artifactId>kafka-junit</artifactId>
			<version>${kafka-junit.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>${zookeeper.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
				<executions>
					<execution>
						<id>default-integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<!-- this is avoid some simple duplicate finds, only use as exception -->
				<groupId>org.basepom.maven</groupId>
				<artifactId>duplicate-finder-maven-plugin</artifactId>
				<configuration>
					<checkTestClasspath>false</checkTestClasspath>
					<ignoredClassPatterns>
						<ignoredClassPattern>kafka/kafka-version\.properties</ignoredClassPattern>
					</ignoredClassPatterns>
					<ignoredResourcePatterns>
						<ignoredResourcePattern>kafka/kafka-version\.properties</ignoredResourcePattern>
					</ignoredResourcePatterns>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
