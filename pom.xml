<?xml version="1.0" encoding="UTF-8"?>
<!-- License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html). -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.basepom</groupId>
        <artifactId>basepom-oss</artifactId>
        <version>39</version>
    </parent>

    <groupId>io.bf2.kas</groupId>
    <artifactId>kas-broker-plugins</artifactId>
    <version>2.7.0</version>

    <name>kas-broker-plugins</name>
    <description>A collection of plugins for Apache Kafka</description>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/bf2fc6cc711aee1a0c2a/kas-broker-plugins.git</connection>
        <developerConnection>scm:git:git@github.com:bf2fc6cc711aee1a0c2a/kas-broker-plugins.git</developerConnection>
        <tag>2.7.0</tag>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.targetJdk>11</project.build.targetJdk>
        <basepom.check.skip-license>true</basepom.check.skip-license>
        <basepom.check.fail-dependency>false</basepom.check.fail-dependency>
        <basepom.check.skip-dependency-scope>true</basepom.check.skip-dependency-scope>

        <kafka.version>3.2.3</kafka.version>
        <basescala.version>2.13</basescala.version>
        <junit.version>5.8.2</junit.version>
        <mockito.version>4.6.1</mockito.version>
        <slf4j.version>1.7.36</slf4j.version>
        <guava.version>30.0-jre</guava.version>
        <zookeeper.version>3.6.3</zookeeper.version>
        <kafka-junit.version>4.2.1</kafka-junit.version>
        <curator-test.version>5.2.0</curator-test.version>
        <awaitility.version>4.2.0</awaitility.version>

        <!--Sonar Setting-->
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>bf2fc6cc711aee1a0c2a</sonar.organization>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${basescala.version}</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.charithe</groupId>
            <artifactId>kafka-junit</artifactId>
            <version>${kafka-junit.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-test</artifactId>
            <version>${curator-test.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
            <version>${zookeeper.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <useUnlimitedThreads>true</useUnlimitedThreads>
                    <parallel>all</parallel>
                    <forkCount>1</forkCount>
                    <reuseForks>true</reuseForks>
                    <forkedProcessTimeoutInSeconds>90</forkedProcessTimeoutInSeconds>
                    <forkedProcessExitTimeoutInSeconds>90</forkedProcessExitTimeoutInSeconds>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>-Xmx1024m</argLine>
                    <forkedProcessTimeoutInSeconds>90</forkedProcessTimeoutInSeconds>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                </configuration>
                <executions>
                    <execution>
                        <id>default-integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- this is avoid some simple duplicate finds, only use as exception -->
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <configuration>
                    <checkTestClasspath>false</checkTestClasspath>
                    <ignoredClassPatterns>
                        <ignoredClassPattern>kafka/kafka-version\.properties</ignoredClassPattern>
                        <ignoredClassPattern>scala.annotation.nowarn</ignoredClassPattern>
                    </ignoredClassPatterns>
                    <ignoredResourcePatterns>
                        <ignoredResourcePattern>kafka/kafka-version\.properties</ignoredResourcePattern>
                    </ignoredResourcePatterns>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <preparationGoals>verify</preparationGoals>
                    <pushChanges>false</pushChanges>
                    <localCheckout>true</localCheckout>
                    <remoteTagging>false</remoteTagging>
                    <arguments>-Dmaven.deploy.skip=true</arguments>
                    <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>quickly</id>
            <properties>
                <basepom.check.skip-all>true</basepom.check.skip-all>
                <skipTests>true</skipTests>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <properties>
                <release.properties />
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-release-plugin</artifactId>
                        <configuration>
                            <releaseProfiles>release-perform,quickly</releaseProfiles>
                            <arguments>${release.properties}</arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release-perform</id>
            <properties>
                <release.arguments />
                <!-- we don't want to deploy to a maven repository -->
                <maven.deploy.skip>true</maven.deploy.skip>
            </properties>
        </profile>
    </profiles>
</project>
